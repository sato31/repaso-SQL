USE holamundo;

CREATE TABLE products(		#CREA LA TABLA PRODUCTS CON UNA LLAVE PRIMARIA Y UNA LLAVE FORANEA(EL ID DE LA TABLA users)
ID INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(50) NOT NULL,
CREATED_BY INT NOT NULL,
MARCA VARCHAR(50) NOT NULL,
PRIMARY KEY(ID),
FOREIGN KEY(CREATED_BY) REFERENCES user(id)
);

RENAME TABLE products TO PRODUCT; 	#CAMBIA EL NOMBRE DE LA TABLA products a PRODUCT

INSERT INTO PRODUCT (NAME, CREATED_BY, MARCA) #SE AÑADEN MULTIPLES REGISTROS A LA TABLA PRODUCT
VALUES
('ipad', 1, 'apple'),
('iphone', 1, 'apple'),
('watch', 2, 'apple'),
('macbook', 1, 'apple'),
('imac', 3, 'apple'),
('ipad mini', 3, 'apple');

SELECT * FROM PRODUCT;

#LEFT JOIN (JUNTA COLUMNAS DE 2 TABLAS EN UNA SOLA RELACIONADAS CON EL ID DEL USUARIO)

SELECT user.id, user.email, PRODUCT.NAME FROM user LEFT JOIN PRODUCT ON user.id = PRODUCT.CREATED_BY;
#SE CONSULTAN LAS COLUMNAS id e email de la tabla user y  NAME DE LA TABLA PRODUCT
#USANDO LEFT JOIN PARA MOSTRAR DICHAS COLUMNAS EN UNA NUEVA TABLA
#Y CON 'ON' SE LE ESPECIFICA QUE EL id DE LA TABLA USER ES EL MISMO DE LA COMUNA CREATED_BY DE LA TABLA PRODUCT.

SELECT USUARIO.id, USUARIO.email, PRODUCTO.name FROM user USUARIO LEFT JOIN PRODUCT PRODUCTO ON USUARIO.id = PRODUCTO.CREATED_BY;
# SE ASIGNAN ALIAS A LAS TABLAS Y SE EJECUTA EL LEFT JOIN CON LOS ALIAS TRAYENDO TODOS LOS DATOS DE LAS COLUMNAS ID E EMAIL DE LA TABLA USUARIO.

#RIGHT JOIN
SELECT USUARIO.id, USUARIO.email, PRODUCTO.name FROM user USUARIO RIGHT JOIN PRODUCT PRODUCTO ON USUARIO.id = PRODUCTO.CREATED_BY;
#AHORA SE TRAERAN TODOS LOS DATOS DE LA COLUMNA NAME de PRODUCT Y SE MOSTRARÁN LOS ID E EMAIL DE LA TABLA user.

#INNER JOIN
SELECT USUARIO.id, USUARIO.email, PRODUCTO.name FROM user USUARIO INNER JOIN PRODUCT PRODUCTO ON USUARIO.id = PRODUCTO.CREATED_BY;
#SOLO SE TRAERAN LOS DATOS DE AMBAS TABLAS QUE ESTEN ASOCIADOS

#CROSS JOIN (PRODUCTO CARTESIANO ENTRE DOS TABLAS)
SELECT USUARIO.id, USUARIO.name, PRODUCTO.id, PRODUCTO.name FROM USER USUARIO CROSS JOIN PRODUCT PRODUCTO; 

#GROUP BY (AGRUPA LOS REGISTROS DEACUERDO AL PARAMETRO ESPECIFICADO)
SELECT COUNT(id), marca FROM PRODUCT GROUP BY MARCA;	#MUESTRA EL NUMERO DE REGISTROS QUE TIENE CADA MARCA

SELECT COUNT(PRODUCT.ID), USER.NAME FROM PRODUCT LEFT JOIN USER ON USER.ID = PRODUCT.CREATED_BY GROUP BY PRODUCT.CREATED_BY;
#MUESTRA CUANTOS PRODUCTOS ESTAN ASOCIADOS A CADA USUARIO

#HAVING
SELECT COUNT(PRODUCT.ID), USER.NAME FROM PRODUCT LEFT JOIN USER 
ON USER.ID = PRODUCT.CREATED_BY GROUP BY PRODUCT.CREATED_BY
HAVING COUNT(PRODUCT.ID) >= 2;
# MUESTRA CUANTOS PRODUCTOS CREO CADA USUSARIO SIEMPRE Y CUANDO SEAN 2 O MAS PRODUCTOS

#DROP TABLE (ELIMINA LA TABLA)
DROP TABLE PRODUCT;
DROP TABLE USER;
DROP TABLE ANIMALES;

CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `id` INT NOT NULL,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)







 






